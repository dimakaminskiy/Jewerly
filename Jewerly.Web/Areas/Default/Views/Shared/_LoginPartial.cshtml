@model Jewerly.Web.Areas.Default.Models.LoginViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel"><img src="/Content/img/LogoTrandBig2.png" class="img-responsive" alt="TrandyCats" /></h4>
</div>
 
    
<div class="modal-body">

    <!-- Nav tabs -->
    <ul class="nav nav-justified" role="tablist">
        <li role="presentation" class="active"><a href="#LogIn" aria-controls="LogIn" role="tab" data-toggle="tab">Вход</a></li>
        <li role="presentation"><a href="#Pd" aria-controls="Pd" role="tab" data-toggle="tab">Восстановление пароля</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in active" id="LogIn">

            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <div>
                                @Html.LabelFor(m => m.RememberMe)
                                @Html.CheckBoxFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-primary">Войти</button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div role="tabpanel" class="tab-pane fade" id="Pd">
            @using (Html.BeginForm("ForgotPassword", "Account", FormMethod.Post, new { @role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div id="ForgotPassword" class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10 col-md-offset-2">
                            <button type="submit" class="btn btn-default">Выслать новый пароль</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>



</div>



<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
</div>
<script>
        $("form").removeData("validator");
        $("form").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse("form");
</script>





