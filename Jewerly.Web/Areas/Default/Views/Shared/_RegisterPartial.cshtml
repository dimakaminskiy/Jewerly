@model Jewerly.Web.Areas.Default.Models.RegisterViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel"><img src="/Content/img/LogoTrandBig2.png" class="img-responsive" alt="Название" /></h4>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        <!-- Nav tabs -->
        <ul class="nav nav-justified" role="tablist">
            <li role="presentation" class="active"><a href="#Register" aria-controls="Register" role="tab" data-toggle="tab">Регистрация</a></li>
            <li role="presentation"><a href="#Reg" aria-controls="Reg" role="tab" data-toggle="tab">Условия регистрации</a></li>
        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade in active" id="Register">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryId, null, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("CountryId", null, htmlAttributes: new {@class = "form-control", style = "margin: auto"})
                            @Html.ValidationMessageFor(model => model.CountryId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder ="+380931234567"} })
                            @Html.ValidationMessageFor(model => model.Phone, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KindOfActivity, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.KindOfActivity, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.KindOfActivity, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.AgreeWithConditions, htmlAttributes: new { @class = "control-label" })

                                @Html.CheckBoxFor(model => model.AgreeWithConditions, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AgreeWithConditions, "", new { @class = "text-danger" })
                            @if (Model.AgreeWithConditions)
                            {
                                <button type="submit" class="btn btn-primary" id="btn-reg" >Зарегистрироваться</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary" id="btn-reg" disabled="disabled">Зарегистрироваться</button>
                            }
                        </div>
                    </div>
                </div>

            </div>

            <div role="tabpanel" class="tab-pane fade" id="Reg">
                <div>
                    <h4>Регистрация для оптовых покупатей</h4>
                    <p>Вам необходимо пройти простую регистрацию, после которой мы свяжемся с Вами для активации Вашей учетной записи, для дальнейшей работы с нами.</p>
                    <p>Желательно указать вид деятельности ЧП (магазин, киоск на рынке, ярмарки, группа в социальной сети) где Вы работаете.</p>
                    <p>Не раздавать Ваш логин и пароль третим лицам (система автоматически блокирует подобное).</p>
                </div>
            </div>
        </div>


    </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
        </div>

}
<script>
    //условия регистрации
    $("#AgreeWithConditions").change(function () {
        if (this.checked) {
            $("#btn-reg").removeAttr("disabled");
        }
        else {
            $("#btn-reg").attr("disabled", "disabled");
        }
    });

    $("form").removeData("validator");
    $("form").removeData("unobtrusiveValidation");
    $.validator.unobtrusive.parse("form");
</script>