@model Jewerly.Domain.Product

@{
    ViewBag.Title = "Товары";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}

<h2>Создание</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-sm-10">
            <div class="form-horizontal">
                <h4>Товар</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, null, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control attr-option" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SeoName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SeoName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SeoName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })  [USD]
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Published)
                            @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PictureId, null, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PictureId", null, htmlAttributes: new { @class = "form-control pic-change" })
                        @Html.ValidationMessageFor(model => model.PictureId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MarkupId, null, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("MarkupId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MarkupId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DiscountId, null, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DiscountId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DiscountId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Создать" class="btn btn-default" />
                    </div>
                </div>

            </div>
        </div>
        <div class="col-sm-2">
            @*--------------------------------*@
            <div class="absolute_img pull-right">
                <img src='/Content/img/NoImage.gif' class="img-responsive shadow" id="prodPic" />
            </div>
            @*-------------------------------------*@
        </div>

    </div>


}

<div>
    <a href="@Url.Action("Index", "Products")" class="btn btn-default">Назад</a>
</div>

@section scripts {
    <script>
        $(".attr-option").on("change", function() {
            var attrId = $(this).val();
            var link = "@Url.Action("ProductNameByCategoryId")";


            $.ajax({
                type: "GET",
                url: link,
                traditional: true,
                data: {
                    id: attrId
                }
            }).done(function(data) {
                if (data.success === true) {
                    $("#Name").val(data.name);
                } else {
                    alert(data.errorMessage);
                }
            }).fail(function(e) {
                alert('Ошибка операции');
            });
        });

        $(".pic-change").on("change", function () {
            var picId = $(this).val();
            var link = "@Url.Action("ProductPicturebyId")";
            if (picId<1) {
                $("#prodPic").attr("src", "/Content/img/NoImage.gif");
                return;
            }
            
            $.ajax({
                type: "GET",
                url: link,
                traditional: true,
                data: {
                    id:picId
                }
            }).done(function (data) {
                if (data.success === true) {
                    $("#prodPic").attr("src", data.name);
                }
                else {
                    alert(data.errorMessage);
                }
            }).fail(function (e) {
                alert('Ошибка операции');
            });



        });
    </script>

}