@using System.Collections
@using System.Web.Mvc.Html
@using Jewerly.Domain
@using Jewerly.Web.Utils
@model IEnumerable<Jewerly.Domain.Product>

@{
    ViewBag.Title = "Товары";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}





<div>
    <form action="@Url.Action("Index")" method="get">
        <div class="form-group">
            <label class="col-md-2">
                Поиск по группе товара
            </label>
            <div class="col-md-10">
                @Html.DropDownList("categoryId", (ViewBag.Category as SelectList), htmlAttributes: new { @class = "form-control", name = "categoryId", id = "categoryId" })
            </div>
           </div>
        <div class="form-group">
            <label class="col-md-2">
                Поиск по Id
            </label>
            <div class="col-md-10">
                @Html.Editor("searchString", new { @class = "form-control" })
                <input type="submit" value="Найти" class="btn btn-default" />
            </div>
        </div>

    </form>
   </div>


        @*
            <div class="pull-right">
                <form class="navbar-form" role="search">
                    <div class="input-group" id="search">
                        <input type="text" class="form-control" placeholder="Поиск...">
                    </div><!-- /input-group -->
                </form>
            </div>
        *@
        <h2>Товары</h2>

        <p>
            @Html.ActionLink("Создать", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Picture.Path)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SeoName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShortDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FullDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Published)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img class="img-responsive" src="@item.Picture.Preview()" alt="@item.Name" title="@item.Name" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SeoName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShortDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Published)
                    </td>
                    <td>
                        <a href="@Url.Action("Edit", new {id = item.ProductId})"><span class="glyphicon glyphicon-pencil"></span></a>
                        <a href="@Url.Action("Delete", new {id = item.ProductId})"><span class="glyphicon glyphicon-trash"></span></a>
                    </td>
                </tr>
            }

        </table>


@if (ViewBag.CountPage != null && ((int)ViewBag.CountPage)>1)
    {
        @Html.PageLinks((int)ViewBag.PageNo,(int) ViewBag.CountPage, x => Url.Action("Index", "Products",
                new
                {
                  searchString=ViewBag.SearchString, 
                  categoryId=ViewBag.CategoryId,
                    page = x
                  }))
    }